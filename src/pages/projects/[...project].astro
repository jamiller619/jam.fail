---
import Main from '../../layouts/Main.astro'
import { getCollection, render, type CollectionEntry } from 'astro:content'
import Icon from '../../components/Icon.astro'

export async function getStaticPaths() {
  const projects = await getCollection('projects')

  return projects.map((project) => ({
    params: { project: project.data.title.toLowerCase() },
    props: project,
  }))
}

type Props = CollectionEntry<'projects'>

const project = Astro.props
const { Content } = await render(project)
const { title, description, image, links } = project.data
---

<Main>
  <div
    class="hero container"
    style={{
      backgroundImage: `url(${image.url.src})`,
    }}>
    <div class="content">
      <h1>{title}</h1>
      <p>{description}</p>
      <div class="links">
        {
          links.map((link) => (
            <a href={link.href}>
              {link.icon && <Icon name={link.icon} />}
              {link.label}
            </a>
          ))
        }
      </div>
    </div>
  </div>
  <div class="page content container">
    <Content />
  </div>
</Main>

<style>
  .hero {
    background-size: cover;
    background-position: 50% 50%;
    padding-block-start: var(--size-11);
    padding-block-end: var(--size-8);
    color: var(--text-2);

    a {
      display: flex;
      gap: var(--size-2);
      /* font-size: 1.5rem; */
      font-weight: 500;
      color: var(--text-1);
      text-wrap: nowrap;

      svg {
        width: 24px;
      }

      &:hover {
        color: var(--text-1);
      }
    }

    h1 {
      margin-block: var(--size-2);
    }
  }

  .links {
    display: flex;
    gap: var(--size-6);
  }

  .content {
    max-width: 50ch;
    margin-inline: auto;
  }

  .page {
    display: flex;
    flex-direction: column;
    gap: var(--size-5);
    margin-block-start: var(--size-8);
    line-height: var(--font-lineheight-4);

    h1,
    h2,
    h3 {
      color: var(--accent);
      margin-block: var(--size-1);
      line-height: var(--font-lineheight-0);
    }

    a {
      color: var(--accent);
      text-decoration: underline;

      &:hover {
        text-decoration: none;
      }
    }

    img {
      block-size: 100%;
      max-width: 100%;
    }

    code {
      background: rgb(from canvastext r g b / 0.1);
      padding-inline: var(--size-1);
      border-radius: var(--size-2);
    }

    pre {
      padding: var(--size-5);

      code {
        background: none;
      }
    }
  }
</style>
